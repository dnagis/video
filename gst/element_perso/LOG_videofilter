###Objectif de départ: un element fait à partir du template videofilter pour aller vers videorate
##(avec la notion que videofilter et videorate héritent d'une classe basetransform)

##Stratégie initiale:
#Créer un element perso à partir du template videofilter
#Le faire fonctionner entre un décodeur et un encodeur pour qu'il traite les frames en raw une par une
#Essai Piste: valeur retournée par videorate dans la fonction gst_video_rate_transform_ip() GST_BASE_TRANSFORM_FLOW_DROPPED

##LOG
# Créer un element perso à partir du template videofilter
--> sed de chez GNU cf LOG_element_perso_main
--> gst-plugins-bad/tools -->gst-element-maker my_element videofilter
--> le voir fonctionner:
gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools videotestsrc is-live=true ! myelement ! fakesink

# Le faire fonctionner entre un décodeur et un encodeur pour qu'il traite les raw frames une par une

-Créer un fichier video avec 300 buffers
gst-launch-1.0 videotestsrc num-buffers=100 ! vaapih264enc ! h264parse ! mp4mux ! filesink location=in.mp4

-Une pipeline qui décode et réencode 
gst-launch-1.0 filesrc location=in.mp4 ! qtdemux ! h264parse ! vaapih264dec ! vaapih264enc ! h264parse ! mp4mux ! filesink location=out.mp4

-La même pipeline avec mon element au milieu
gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools filesrc location=in.mp4 ! qtdemux ! h264parse ! vaapih264dec ! myelement ! vaapih264enc ! h264parse ! mp4mux ! filesink location=out.mp4

--> not linked
--> j'essaie d'ajouter les elements un par un
bloque à partir de: vaapih264enc derrière myelement

j'essaie d'ajouter queue : entre myelement et encodeur: non

--> est ce que videorate OK?
gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools filesrc location=in.mp4 ! qtdemux ! h264parse ! vaapih264dec ! videorate ! vaapih264enc ! h264parse ! mp4mux ! filesink location=out.mp4
oui

--> j'essaie -vvvv
gst-launch-1.0 -vvvv --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools filesrc location=in.mp4 ! qtdemux ! h264parse ! vaapih264dec ! myelement ! vaapih264enc ! h264parse ! mp4mux ! filesink location=out.mp4
--> ne donne rien

--> est ce que le format qui sort de mon element convient à vaapih264enc?
--> je n'ai pas not negotiated

--> j'essaie fakesrc ! myelement ! vaapih264enc ! fakesink
gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools fakesrc ! myelement ! vaapih264enc ! fakesink
streaming stopped, reason not-negotiated (-4)
--> ce serait donc un problème entre mon element et vaapisink, un queue qq part n'amènera rien (la première erreur aurait pu laisser supposer que queue qq part aiderait: 
"Delayed linking failed .. "
mais visiblement c'est l'erreur "streaming stopped, reason not-linked (-1)" de la première pipeline qui était plus informative

je décompose: 
gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools videotestsrc is-live=true ! vaapih264enc ! fakesink
marche mais 
gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools fakesrc ! vaapih264enc ! fakesink
ne marche pas

gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools fakesrc ! myelement ! fakesink
ne marche pas


gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools videotestsrc is-live=true ! myelement ! fakesink
marche
gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools videotestsrc is-live=true ! myelement ! vaapisink
apparait ***vert*** je ne vois pas la mire: mauvais format? ou vide???

gst-launch-1.0  videotestsrc is-live=true ! videorate ! vaapisink
ou
gst-launch-1.0  videotestsrc is-live=true ! videoconvert ! vaapisink
je vois la mire

mais 

gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools videotestsrc is-live=true ! myelement ! vaapisink

apparait vert... mais avec la bonne taille

si vide, un fichier out.raw doit être quasi vide?
gst-launch-1.0  videotestsrc is-live=true ! videorate ! filesink location=out.raw
je laisse 3s: 60 Mo

gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools videotestsrc is-live=true ! myelement ! filesink location=out.raw
je laisse 3s: 28Mo, donc n'est pas vide

Est ce qu'un videoconvert règle le pb de link mon element - vaapih264enc?
gst-launch-1.0 --gst-plugin-path=/initrd/mnt/dev_save/packages/gst-plugins-bad-1.18.1/tools fakesrc ! myelement ! videoconvert ! vaapih264enc ! fakesink
--> non --> streaming stopped, reason not-negotiated (-4)

-Formats: compatibilité?
gst-inspect-1.0 vaapih264enc --> prend 3 formats:  { (string)NV12, (string)YV12, (string)I420 }
le template de pads de mon element: #define VIDEO_SRC_CAPS GST_VIDEO_CAPS_MAKE("{ I420, Y444, Y42B, UYVY, RGBA }")


