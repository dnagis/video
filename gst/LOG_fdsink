####Gstreamer: Pipelines video src --> tee t1 -->detection yolo via fdsink tee t2 --> filesink .mp4



###Frequently used

##les dernières pipelines:

#rpicamsrc portrait vers detect et capture

gst-launch-1.0 -e --quiet rpicamsrc ! 'video/x-raw,width=480,height=640,format=BGR,framerate=30/1' ! tee name=t t. ! queue ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=capture.mp4 t. ! queue ! fdsink | ./stdin_to_detect po 0.5

#rpicamsrc paysage vers detect et capture

gst-launch-1.0 -e --quiet rpicamsrc ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! tee name=t t. ! queue ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=capture.mp4 t. ! queue ! fdsink | ./stdin_to_detect pa 0.5

#rpicamsrc portrait vers detect seulement (test quand je m'y remets pour avoir un cont pos)

gst-launch-1.0 -e --quiet rpicamsrc ! 'video/x-raw,width=480,height=640,format=BGR,framerate=30/1' ! fdsink | ./stdin_to_detect po 0.7



###LOG chronologique

#Attention: sans is-live=true videotestsrc envoie de la data dès qu'elle est générée, donc beaucoup!

#Output propre (pas de messages d'informations gstreamer dans l'output, nécessaire pour passer raw video data à yolo): --quiet
trouvé dans: 
https://stackoverflow.com/questions/71950827/the-fdsink-element-in-gstreamer-cannot-be-used-to-output-the-correct-byte-stream

gst-launch-1.0 --quiet videotestsrc num-buffers=10 ! fdsink

#Hello World Tee
gst-launch-1.0 videotestsrc num-buffers=100 ! tee name=t \
t. ! queue ! fdsink \
t. ! queue ! vaapih264enc ! h264parse ! mp4mux ! filesink location=test.mp4

#Vérification EOS capté et shutdown OK, par ctrl+C ou kill -s SIGINT `pidof gst-launch-1.0`
gst-launch-1.0 -e --quiet videotestsrc ! tee name=t \
t. ! queue ! fdsink \
t. ! queue ! vaapih264enc ! h264parse ! mp4mux ! filesink location=test.mp4


####RPi4 pour déterminer quel format possible entre rpicamsrc et v4l2h264enc
***Attention: si capuchon au bout de camera: images noires: en console output fdsink au niveau du raw est vide***
***MAIS (bonne nouvelle): avec videotestsrc pattern=2 (black) je vois bien des bytes passer***

#pipeline dans laquelle insérer tee fdsink
gst-launch-1.0 -e rpicamsrc ! video/x-raw,width=640,height=480,format=BGR,framerate=30/1 ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=test.mp4

#fdsink seul
gst-launch-1.0 -e rpicamsrc ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! fdsink

#Tentative de tee
gst-launch-1.0 -e --quiet rpicamsrc ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! tee name=t \
t. ! queue ! fdsink \
t. ! queue ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=test.mp4


####Comprendre l'output fdsink, sur le NUC
##Redirection simple
gst-launch-1.0 --quiet videotestsrc ! video/x-raw,width=640,height=480,format=BGR,framerate=30/1 ! fdsink
pattern = 5 --> green
gst-launch-1.0 --quiet videotestsrc pattern=5 num-buffers=1 ! video/x-raw,width=640,height=480,format=BGR,framerate=30/1 ! fdsink > image.raw
ls -l image.raw --> 921600


#####Rpicamsrc vers capture filesink + vers une Mat dans du code en cpp via fdsink

#Le code .cpp (par ex. import_stdin_to_mat) pour recevoir les frames à partir de fdsink est dans github video/opencv/stdin_to_mat

gst-launch-1.0 --quiet rpicamsrc ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! fdsink | ./stdin_to_mat

gst-launch-1.0 -e --quiet rpicamsrc ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! tee name=t \
t. ! queue ! fdsink \
t. ! queue ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=test.mp4 | ./stdin_to_mat


#####XPS13 webcam (cause déplacement) tee 1)--> cpp détection yolo 2)--> capture

gst-launch-1.0 -e --quiet v4l2src ! videoconvert ! video/x-raw,width=640,height=480,format=BGR,framerate=30/1 ! tee name=t \
t. ! queue ! videoconvert ! vaapih264enc ! h264parse ! mp4mux ! filesink location=capture.mp4 \
t. ! queue ! fdsink | ./stdin_to_detect pa 0.7

#####NUC filesrc décodage fdsink détection (mode portrait)
gst-launch-1.0 filesrc location=portrait.mp4 ! qtdemux ! vaapih264dec ! videoconvert ! 'video/x-raw,width=480,height=640,format=BGR,framerate=30/1' ! fdsink | ./stdin_to_detect po 0.7

#####NUC videotestsrc tee 1)--> cpp détection yolo 		tee 2)--> capture

gst-launch-1.0 -e --quiet videotestsrc is-live=true ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! tee name=t \
t. ! queue ! videoconvert ! vaapih264enc ! h264parse ! mp4mux ! filesink location=capture.mp4 \
t. ! queue ! fdsink | ./stdin_to_detect pa 0.7





#####RPi:

###videotestsrc tee t-1)--> cpp détection yolo t-2)--> capture

gst-launch-1.0 -e videotestsrc is-live=true ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=capture.mp4

gst-launch-1.0 -e --quiet videotestsrc is-live=true ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! tee name=t \
t. ! queue ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=capture.mp4 \
t. ! queue ! fdsink | ./stdin_to_detect pa 0.7

gst-launch-1.0 -e --quiet videotestsrc is-live=true ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! tee name=t t. ! queue ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=capture.mp4 t. ! queue ! fdsink | ./stdin_to_detect pa 0.7

kill -s SIGINT `pidof gst-launch-1.0`

###rpicamsrc

kill -s SIGINT `pidof gst-launch-1.0`

##uniquement capture
gst-launch-1.0 -e rpicamsrc ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=capture.mp4

##capture + détection 640x480
gst-launch-1.0 -e --quiet rpicamsrc ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! tee name=t \
t. ! queue ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=capture.mp4 \
t. ! queue ! fdsink | ./stdin_to_detect pa 0.7

#one line pour detach (&)
gst-launch-1.0 -e --quiet rpicamsrc ! 'video/x-raw,width=640,height=480,format=BGR,framerate=30/1' ! tee name=t t. ! queue ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=capture.mp4 t. ! queue ! fdsink | ./stdin_to_detect pa 0.5 &

##capture + détection 480x640
gst-launch-1.0 -e --quiet rpicamsrc ! 'video/x-raw,width=480,height=640,format=BGR,framerate=30/1' ! tee name=t t. ! queue ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! mp4mux ! filesink location=capture.mp4 t. ! queue ! fdsink | ./stdin_to_detect po 0.5 &


